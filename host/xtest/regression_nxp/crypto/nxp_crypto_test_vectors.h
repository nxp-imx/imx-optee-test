/* SPDX-License-Identifier: BSD-2-Clause */
/*
 * Copyright 2021 NXP
 */
#ifndef __NXP_CRYPTO_TEST_VECTORS_H__
#define __NXP_CRYPTO_TEST_VECTORS_H__

#include <stdint.h>

static const uint8_t ciph_data_64_iv[] = {
	0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, /* 12345678 */
};

static const uint8_t ciph_data_128_iv[] = {
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, /* 01234567 */
	0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, /* 89ABCDEF */
};

static const uint8_t ciph_data_aes_key[] = {
	0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, /* 12345678 */
	0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x30, /* 9ABCDEF0 */
};

static const uint8_t ciph_data_ref[] = {
	0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, /* 23456789 */
	0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x30, 0x31, /* ABCDEF01 */
	0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, /* 3456789A */
	0x42, 0x43, 0x44, 0x45, 0x46, 0x30, 0x31, 0x32, /* BCDEF012 */
	0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41, 0x42, /* 456789AB */
	0x43, 0x44, 0x45, 0x46, 0x30, 0x31, 0x32, 0x33, /* CDEF0123 */
};

static const uint8_t ciph_data_ref2[] = {
	0x6d, 0x2c, 0x07, 0xe1, 0xfc, 0x86, 0xf9, 0x9c, 0x6e, 0x2a, 0x8f,
	0x65, 0x67, 0x82, 0x8b, 0x42, 0x62, 0xa9, 0xc2, 0x3d, 0x0f, 0x3e,
	0xd8, 0xab, 0x32, 0x48, 0x22, 0x83, 0xc7, 0x97, 0x96, 0xf0, 0xad,
	0xba, 0x1b, 0xcd, 0x37, 0x36, 0x08, 0x49, 0x96, 0x45, 0x2a, 0x91,
	0x7f, 0xae, 0x98, 0x00, 0x5a, 0xeb, 0xe6, 0x1f, 0x9e, 0x91, 0xc3,
};

static const uint8_t ciph_data_out2[] = {
	0x34, 0x5d, 0xeb, 0x1d, 0x67, 0xb9, 0x5e, 0x60, 0x0e, 0x05, 0xca,
	0xd4, 0xc3, 0x2e, 0xc3, 0x81, 0xaa, 0xdb, 0x3e, 0x2c, 0x1e, 0xc7,
	0xe0, 0xfb, 0x95, 0x6d, 0xc3, 0x8e, 0x68, 0x60, 0xcf, 0x05, 0x53,
	0x53, 0x55, 0x66, 0xe1, 0xb1, 0x2f, 0xa9, 0xf8, 0x7d, 0x29, 0x26,
	0x6c, 0xa2, 0x6d, 0xf4, 0x27, 0x23, 0x3d, 0xf0, 0x35, 0xdf, 0x28,
};

static const uint8_t ciph_data_key2[] = { 0x47, 0x13, 0xa7, 0xb2, 0xf9, 0x3e,
					  0xfe, 0x80, 0x9b, 0x42, 0xec, 0xc4,
					  0x52, 0x13, 0xef, 0x9f };

static const uint8_t ciph_data_iv2[] = { 0xeb, 0xfa, 0x19, 0xb0, 0xeb, 0xf3,
					 0xd5, 0x7f, 0xea, 0xbd, 0x4c, 0x4b,
					 0xd0, 0x4b, 0xea, 0x01 };

static const uint8_t ciph_data_ref3[] = {
	0x46, 0xfe, 0x82, 0xfb, 0x4e, 0x6d, 0xa0, 0xca, 0x9e, 0xe4, 0xf5, 0xae,
	0x55, 0x7f, 0x2c, 0x4d, 0xd9, 0x42, 0xc6, 0xcb, 0xf7, 0x34, 0x05, 0x68,
	0x05, 0x15, 0x75, 0x16, 0x65, 0x90, 0xfa, 0xf9, 0xdc, 0xe1, 0x0c, 0x55,
	0xfb, 0x1e, 0xbf, 0x25, 0x6c, 0xe1, 0x21, 0x22, 0x5e, 0x1d, 0x2e, 0x14,
	0x37, 0x4b, 0xa7, 0x57, 0x68, 0xf1, 0x1a, 0x4c, 0xd6, 0x47, 0xa8, 0xc2,
	0x12, 0x64, 0xb1, 0x12, 0xc5, 0xf3, 0x09, 0x2b, 0x98, 0x26, 0x77, 0x31,
	0x59, 0x59, 0xf4, 0x5e, 0xe4, 0xdc, 0x9a, 0xed, 0x67, 0x83, 0x7c, 0xa2,
	0xd3, 0x8b, 0x3a, 0x39, 0x27, 0x8a, 0xef, 0x71, 0x76, 0xdb, 0x4c, 0x7d,
	0x67, 0x89, 0xac, 0x13
};

static const uint8_t ciph_data_out3[] = {
	0x25, 0x24, 0x26, 0x1d, 0x09, 0xe5, 0x10, 0xa0, 0x9b, 0xf8, 0xbc, 0x7a,
	0x7b, 0x17, 0x36, 0x69, 0x85, 0x03, 0x36, 0xcd, 0x5e, 0x0c, 0x2b, 0xeb,
	0x73, 0xe8, 0x84, 0x62, 0x08, 0x6e, 0x78, 0x63, 0xee, 0xc7, 0x3d, 0xd3,
	0x9f, 0x11, 0xaf, 0x0b, 0x07, 0xfc, 0xdd, 0xe7, 0x43, 0x47, 0xc5, 0x2c,
	0x3e, 0x51, 0xfb, 0x1b, 0x2d, 0xf6, 0x50, 0xdd, 0x46, 0xfa, 0x1f, 0x6a,
	0x76, 0x2b, 0x55, 0x0c, 0x8c, 0x5f, 0xc6, 0x16, 0xf7, 0x7c, 0x99, 0x1b,
	0xd2, 0xa9, 0x02, 0xd0, 0x4e, 0x4f, 0xa0, 0xd6, 0xb0, 0xb2, 0xc2, 0x78,
	0x4f, 0x04, 0x52, 0x45, 0x59, 0xce, 0xd2, 0x0a, 0xa6, 0xf6, 0xe8, 0x74,
	0x3b, 0xd7, 0x30, 0xe6
};

static const uint8_t ciph_data_key3[] = { 0x0c, 0x9b, 0xe2, 0xe6, 0xdf, 0x0b,
					  0x9d, 0x5c, 0x2a, 0x4d, 0xf3, 0x58,
					  0x9c, 0xff, 0x85, 0x4f };

static const uint8_t ciph_data_iv3[] = { 0x1d, 0x44, 0xfb, 0x25, 0xe6, 0x86,
					 0x85, 0xae, 0x00, 0x00, 0x00, 0x00,
					 0x00, 0x00, 0x00, 0x00 };
#endif /* __NXP_CRYPTO_TEST_VECTORS_H__ */
